# 51
sudo: true

language: java
jdk: openjdk13

before_install:
  - unset _JAVA_OPTIONS

os:
  - linux
  - osx

env:
  - BRANCH="lworld"
    HG_REPOSITORY="valhalla"
    REPOSITORY="valhalla"
    ARTIFACT="jdk-14-lworld"
    SCM="hg"
  - BRANCH="nestmates"
    HG_REPOSITORY="valhalla"
    REPOSITORY="valhalla"
    ARTIFACT="jdk-14-nestmates"
    SCM="hg"
  - BRANCH="fibers"
    REPOSITORY="loom"
    ARTIFACT="jdk-14-loom"
    SCM="git"
  - BRANCH="records"
    HG_REPOSITORY="amber"
    REPOSITORY="amber"
    ARTIFACT="jdk-14-record"
    SCM="hg"

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install build-essential         ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install libfreetype6-dev        ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install libcups2-dev            ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install libx11-dev libxext-dev libxrender-dev libxtst-dev libxt-dev libxrandr-dev   ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install libasound2-dev          ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install libffi-dev              ; fi
  
install:
  - if [[ "$SCM" == "hg" ]]; then export LATEST_COMMIT=`hg id -r $BRANCH http://hg.openjdk.java.net/$HG_REPOSITORY/$REPOSITORY` ; fi
  - if [[ "$SCM" == "hg" ]]; then echo $LATEST_COMMIT                                                                           ; fi
  - if [[ "$SCM" == "hg" ]]; then chmod u+x ./install.sh                                                                        ; fi
  - if [[ "$SCM" == "hg" ]]; then ./install.sh                                                                                  ; fi
  - if [[ "$SCM" == "git" ]]; then git clone https://github.com/openjdk/$REPOSITORY.git                                         ; fi
  - if [[ "$SCM" == "git" ]]; then cd $REPOSITORY                                                                               ; fi
  - if [[ "$SCM" == "git" ]]; then git checkout $BRANCH                                                                         ; fi
  - if [[ "$SCM" == "git" ]]; then export LATEST_COMMIT=`git describe --tags`                                                   ; fi
  - if [[ "$SCM" == "git" ]]; then cd ..                                                                                        ; fi

script:
  - chmod u+x ./build.sh
  - ./build.sh

before_deploy:
  - tar zcvf $ARTIFACT-$TRAVIS_OS_NAME.tar.gz $ARTIFACT

deploy:
  provider: releases
  api_key:
    secure: "R5ORaE8RpahzmQJrmu10ffhzduKHLMH50cQgdc7d6yZZ3yTyQHNcb/TWtqrjTrusfMkItGI/ydY/64wFBq9EiNbM9XCBQrqnRinCQ1+5LS60K8ZuHMDc7H9gQqIKi091rXtBl3YZDBJZOEHH+FsaJIf3hThYyPhug3Iyzd1/9mqUJr8xie8uiw7RJaHjp0c3zus1aOnHJUAz3L+EzM07IM6o/3IdgtYCDPZgLfNLTJg7L5d/R5x7i0j2QIVO8tFYalQQE/UC9E0EazRIyy5habIMRzdBrlcWdE3q4gFfXkk4S6iFRJ4y6Hfn+iaLCTRcamSyrjYVSGgv0HngEg83WYk0t1Jwm/OI2yCjCvKIhPyONrGlfHc6/H9IiE0Mks6cLoGcL+f4OrxpeKEv17kD79NMcif8EATrL+W6MXnkZ1bw6Mng7mM1t6cXi5uOF3Y3i0u2ELxXTHgpKPnYVFO8AZ9wPE8Tl72inrmEJPzUXoXeN1/DV1s4mbQemXVs8YPLYfuOB9lho5y9wJOLZgH+n8WfNA52SvyCr/cnJg/4Hj+KVfw56/RfyrlY4GqzXvivFuBovP3JmTscWDIZc2zcn7oEOmk2BRdim940CG5t/PHEj4YSUyR0SugotkBEP61qY4IgzRGqgG9Dy9N6VR59ZAYw2i/bpOZbeSp34tTDM64="
  file: $ARTIFACT-$TRAVIS_OS_NAME.tar.gz
  skip_cleanup: true
  on:
    tags: false   # avoid loop
  
